React(JS lib에서 UI 구현)는 MVC에서 View만 담당
데이터의 변화가 있을때 기존 뷰를 날리고 새로 렌더링하는 방식
장점 : 앱 구조가 간단하고 코드양이 축소
Hooks기능도입 = 함수 컴포넌트에서 상태관리 가능 클래스형 컴포넌트는 사용 X
Hooks내장 API를 사용, Immer로 불변성을 지키기, react-virtualized사용으로 성능 최적화
Context API를 사용해 전역 상태 관리

컴포넌트 = 선언체, 재사용이 가능한 API내장, 생김새와 작동 방식정의
  컴포넌트 내부에 또 다른 컴포넌트가 들어갈 수 있음

렌더링 = 사용자 화면에 뷰를 보여주는것, 초기 렌더링과 리렌더링이 있다
  초기 렌더링 = 처음 뷰를 어떻게 보여줄지 정의  render(){}
  render함수를 실행시 내부 컴포넌트는 재귀렌더링함 
  순서 = 최상위 컴포넌트 렌더링 - HTML마크업(문자열형태) - DOM주입
조화과정 = 뷰를 업데이트하는 것, 뷰가 변형되는것 처럼 보이지만 새로운 요소로 갈아끼움 
Virtual DOM = DOM 접근 대신 JS객체를 구성 (DOM 사본)
절차: 1. 데이터를 업데이트하면 전체 UI를 Virtual DOM에 리렌더링함
      2. 이전 Virtual DOM에 있던 내용과 현재 내용을 비교
      3. 바뀐 부분만 실제 DOM에 적용 
=====================================
state

heap에 저장 함수는 stack에 저장
클래스 컴포넌트보다 메모리사용이 적다
클래스형태는 render함수를 무조건 가지고 있어야한다 
